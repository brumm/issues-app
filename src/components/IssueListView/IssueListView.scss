$visible-body-lines: 3;
$body-line-height: 17px;

.container {
  overflow-x: hidden;
  overflow-y: auto;
  background-color: #fff;
}

.item {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  padding: 7px 10px 7px 30px;
  min-height: 80px;

  & + & {
    border-top: 1px solid #e5e5e5;
  }

  &:last-child {
    box-shadow: 0 -1px 0 #e5e5e5 inset;
  }

  > * + * {
    margin-top: 6px;
  }

  &:global(.open) .title :global(.octicon) {
    color: #28a745;
  }
  &:global(.closed) .title :global(.octicon) {
    color: #cb2431;
  }
  &:global(.merged) .title :global(.octicon) {
    color: #6f42c1;
  }

  .repo {
    font-size: 12px;
    color: #bfbfbf;
    overflow: visible;
    position: relative;
    font-weight: normal;

    .unread-marker {
      width: 10px;
      height: 10px;
      background-image: linear-gradient(#89aed6, #5d86b4);
      border-radius: 10px;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: (10px + 10px) * -1;
    }
  }

  .comment-count {
    margin-left: auto;
    :global(.octicon-comment) {
      font-size: 13px;
      margin-top: 2px;
      margin-right: 2px;
    }
  }

  .title {
    font-size: 14px;
    font-weight: bold;

    position: relative;
    overflow: visible;
    line-height: 17px;

    :global(.octicon) {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: (16px + 7.5px) * -1;
    }
  }

  .body {
    color: #868686;
    font-size: 13px;
    line-height: $body-line-height;
    max-height: calc(#{$body-line-height} * #{$visible-body-lines});
    word-break: break-word;
    padding-bottom: 3px;
    box-sizing: content-box;
  }
}

.item-selected {
  composes: item;
  background-color: #7fa5cf;

  &,
  & + .item {
    border-top-color: #fff !important;
  }

  &:last-child {
    box-shadow: 0 1px 0 #fff;
  }

  &,
  .repo,
  .title {
    color: #fff;
  }

  .repo .unread-marker {
    background-color: #fff;
    background-image: none;
  }

  .body {
    color: #cbdced;
  }

  &:global(.open) .title :global(.octicon) {
    color: #fff;
  }
  &:global(.closed) .title :global(.octicon) {
    color: #fff;
  }
  &:global(.merged) .title :global(.octicon) {
    color: #fff;
  }
}
